More Explicit Documentation: https://snowfakery.readthedocs.io/en/docs/#snowfakery-documentation

#If you want to include a recipe from another file
#Optional
- include_file: <path\filename of yml file>

#If you have lines that will be repetitive across multiple sections
#Include these lines here and reference the macro in the other parts of the recipe.
#Optional
- macro <macroName>
  fields:
    <fieldAPIName>: <field value>

#Build out the records, by object that you want to create
- object: <ObjectAPIName>
  nickname: <Name to refer later in recipe>
  include: <macroName>
  count: XX  #Run this x number of times
  just_once: True  #Even if recipe is run X times, run this step only once
  fields:
    RecordType: <Record Type API Name>
    <fieldAPIname>: <field value>
      #Examples
      #TEXT
      #Number
      #TRUE or FALSE
      #HardCoded Text and ${{Reference to another field}}       
      #fake: <faker field reference> E(https://faker.readthedocs.io/en/stable/providers/faker.providers.address.html)
      #if:
      #  - choice:
      #      when: ${{fieldAPIName=='thisValue'}}
      #      pick:
      #        fake: <faker field reference>
      #  - choice:
      #      when: ${{fieldAPIName=='thatValue}}
      #      pick:
      #        fake: <faker field reference
      #random_choice:
      #        Option A: xx%
      #        Option B: xx%
      #random_choice:
      #  - choice:
      #      probability: xx%
      #      pick:
      #        - reference: Nickname
      #  - choice:
      #      probability: xx%
      #      pick:
      #        - reference: Nickname
      #fake.random_number:
      #  digits: xx
      #random_number:
      #  min: xx
      #  max: xx
      #fake.text:
      #  max_nb_chars: xx
    <Lookup field API name>:  
      reference: <nickname or object name> #Will select the last record created in the object you are referencing
      random_reference: <nickname or object name>    #Will randomly select from the records you created for the object referenced.
    <Date fieldAPIname>:
      date_between:
            start_date: <hard coded Date> or <date math> #example -##d is -## of days from today
            end_date: <hard coded Date> or <date math> #example -##d is -## of days from today
